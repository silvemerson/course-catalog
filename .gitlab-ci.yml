stages:
#  - test
#  - qualitygate
 - trivy
#  - build



# test_unit:
#   stage: test
#   image: python:3
#   script: 
#    - pip install -r requirements.txt
#    - python test_users.py
#   only:
#    - master

# qualitygate:
#   stage: qualitygate
#   image: sonarsource/sonar-scanner-cli
#   script:
#     - sonar-scanner -Dsonar.projectKey=course-catalog -Dsonar.sources=. -Dsonar.host.url=http://sonarqube.emerson.cloudns.cl -Dsonar.token=sqp_09a665c92f25dbcc2ef8f5b18eadb0f8b9445f43
#   only:
#    - master

trivy_scan:
  stage: trivy
  image: docker:stable
  services:
    - name: docker:dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    # See https://github.com/docker-library/docker/pull/166
    DOCKER_TLS_CERTDIR: ""
    IMAGE: ${DOCKER_HUB_IMAGE}:${CI_JOB_ID}
  before_script:
    - export TRIVY_VERSION=$(wget -qO - "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
    - echo $TRIVY_VERSION
    - wget --no-verbose https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz -O - | tar -zxvf -
  allow_failure: true
  script:
    # Build image
    - docker build -t ${DOCKER_HUB_IMAGE}:${CI_JOB_ID}
    # Build report
    - ./trivy --exit-code 0 --cache-dir  --no-progress --format template --template "@contrib/gitlab.tpl" -o gl-container-scanning-report.json ${DOCKER_HUB_IMAGE}:${CI_JOB_ID}
    # Print report
    - ./trivy --exit-code 0 --cache-dir --no-progress --severity HIGH $IMAGE
    # Fail on severe vulnerabilities
    - ./trivy --exit-code 1 --cache-dir --severity CRITICAL --no-progress $IMAGE
  # only:
  #  - master


# kaniko:
#   stage: build
#   image:
#     name: gcr.io/kaniko-project/executor:v1.14.0-debug
#     entrypoint: [""]
#   script:
#     - mkdir -p /kaniko/.docker
#     - echo "{\"auths\":{\"${DOCKER_HUB_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${DOCKER_HUB_USER}" "${DOCKER_HUB_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
#     - >-
#       /kaniko/executor
#       --context "${CI_PROJECT_DIR}"
#       --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
#       --destination "${DOCKER_HUB_IMAGE}:${CI_JOB_ID}"
#       --destination "${DOCKER_HUB_IMAGE}:latest"
#   only:
#    - master


