stages:
#  - test
#  - qualitygate
#  - trivy
#  - build
 - dev


# test_unit:
#   stage: test
#   image: python:3
#   script: 
#    - pip install -r requirements.txt
#    - python test_users.py
#   only:
#    - master

# qualitygate:
#   stage: qualitygate
#   image: sonarsource/sonar-scanner-cli
#   script:
#     - sonar-scanner -Dsonar.projectKey=course-catalog -Dsonar.sources=. -Dsonar.host.url=http://sonarqube.emerson.cloudns.cl -Dsonar.token=sqp_09a665c92f25dbcc2ef8f5b18eadb0f8b9445f43
#   only:
#    - master

# trivy_scan:
#   stage: trivy
#   image:
#     name: gcr.io/kaniko-project/executor:v1.14.0-debug
#     entrypoint: [""]
#   before_script:
#     - export TRIVY_VERSION=$(wget -qO - "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
#     - echo $TRIVY_VERSION
#     - wget --no-verbose https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz -O - | tar -zxvf -    
#   script:
#     - mkdir -p /kaniko/.docker
#     - echo "{\"auths\":{\"${DOCKER_HUB_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${DOCKER_HUB_USER}" "${DOCKER_HUB_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
#     - >-
#       /kaniko/executor
#       --context "${CI_PROJECT_DIR}"
#       --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
#       --destination "${DOCKER_HUB_IMAGE}:${CI_JOB_ID}"
#       --no-push
#     - ./trivy image silvemerson/course-catalog
#   only:
#    - master


# kaniko:
#   stage: build
#   image:
#     name: gcr.io/kaniko-project/executor:v1.14.0-debug
#     entrypoint: [""]
#   script:
#     - mkdir -p /kaniko/.docker
#     - echo "{\"auths\":{\"${DOCKER_HUB_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${DOCKER_HUB_USER}" "${DOCKER_HUB_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
#     - >-
#       /kaniko/executor
#       --context "${CI_PROJECT_DIR}"
#       --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
#       --destination "${DOCKER_HUB_IMAGE}:${CI_JOB_ID}"
#       --destination "${DOCKER_HUB_IMAGE}:latest"
#   only:
#    - master

kind_k8s:
  stage: dev
  image: docker:stable
  services:
    - name: docker:18.09.1-dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - apk add curl
    - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.12.0/bin/linux/amd64/kubectl
    - chmod +x kubectl
    - mv kubectl /usr/local/bin/
    - curl -Lo kind https://github.com/kubernetes-sigs/kind/releases/download/0.1.0/kind-linux-amd64
    - chmod +x kind
    - mv kind /usr/local/bin/
    - kind create cluster --name $CI_PIPELINE_ID --wait 180s
    - export KUBECONFIG="$(kind get kubeconfig-path --name $CI_PIPELINE_ID)"
    - REAL_IP=$(ip route|awk '/default/ { print $3 }')
    - sed -i -e "s/localhost/$REAL_IP/g" $KUBECONFIG
  script: 
    - kubectl get nodes --insecure-skip-tls-verify=true  
  after_script:
    - kind delete cluster --name $CI_PIPELINE_ID
  # only:
  #  - master